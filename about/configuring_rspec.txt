Конфигурация командной строки
rspec --help
-------------------------------------
Параметры среды
-I PATH  Укажите PATH для добавления к $LOAD_PATH (может использоваться более одного раза).
RSpec уже добавляет два самых важных каталога в путь загрузки: папки вашего проекта lib и spec. Но иногда вы можете захотеть использовать конкретную библиотеку, минуя Bundler или RubyGems; вот где этот флаг пригодится.
-r, --require PATH передать файл
также пользуют для подключения библиотек, например rspec -rbyebug
------------------------------------
Параметры фильтрации
rspec path/to/a_spec.rb:37
запустить конкретный пример или группу по номеру строки
--only-failures
Эта опция упрощает повторный запуск только ошибок.
--next-failure
исправить и протестировать каждую ошибку одну за другой
--example 'часть описания'
что то найти по части описания
--tag tag_name
найти по имени тегов
-------------------------------------
Параметры вывода
--backtrace
больше контекста для отладки
--dry-run
в сочетании с --format doc — полезный способ быстро получить похожий на документацию вывод
--warnings
вклюсить режим предупреждения
======================================
Установка значений по умолчанию для командной строки
~/.rspec
в home глобальные настройки
./.rspec
файл в корневом каталоге проекта
./.rspec-local
находится рядом с файлом .rspec проекта, предназначен для личных предпочтений, обязательно исключите его из вашей системы контроля версий.

* локальные параметры имеют приоритет над более глобальными. Например, если в файле .rspec задан параметр --profile 5 переопределится --no-profile в файл проекта .rspec-local.
* переменная окружения SPEC_OPTS - установленные здесь значения переопределяют значения, установленные в текстовых файлах.
-------------------------------------
Hooks
Хуки позволяют вам объявлять фрагменты кода, которые выполняются до, после или вокруг ваших спецификаций. (before , after ,around)
config.before(:example) do
в отдельных случаях можно зацепить через тег
RSpec.configure do |config|
  config.when_first_matching_example_defined(:db) do
    require 'support/db'
  end
end
--------------------------------------
Расширение модулями
config.include ExtraExampleMethods - в каждый пример добавляет метод
config.prepend ImportantExampleMethods - в каждом примере заменяет метод
config.extend ExtraGroupMethods - каждой группе добавляет методы

если нужно поделиться например, хуками или определениями let — нужно определить общую группу примеров. Затем добавить эту общую группу в свой блок конфигурации:
config.include_context 'My Shared Group'
------------------------------------
Фильтация
config.example_status_persistence_file_path = 'spec/examples.txt'
где сохранять статус
config.filter_run_excluding :specific_to_some_os
Исключает примеры из запуска; полезно для постоянных исключений на основе факторов среды, таких как ОС, версия Ruby или переменная среды.
config.filter_run_when_matching :some_metadata
фиьтр по тегам, например, RSpec запускает только примеры с метаданными :focus.
------------------------------------
Метаданные 159
